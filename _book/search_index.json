[
["r-markdown.html", "Chapter 8 R Markdown 8.1 YAML Metadata 8.2 Text 8.3 Code Chunks 8.4 Render Output", " Chapter 8 R Markdown RMarkdown is a framework that provides a literate programming format for data science. It can be used to save and execute R code within RStudio, and also is a simple formatting syntax for authoring HTML, PDF, ODT, RTF, and MS Word documents. An RMarkdown is a plain text file that contains three different aspects: YAML metadata Text Code Chunks 8.1 YAML Metadata YAML stands for YAML Ain’t Markup Language, and is used to specify document configurations and properties such as name, date, output format, etc. The (optional) YAML header surrounded by —s. You can also include additional formatting options, such as a table of contents, or even custom CSS which can utilized to further enhance presentation. For the purpose of the class, the default options should be sufficient. The default output above is an html_document format. However, this can be specified as well, such as pdf_document. Before, you must install a TeX distribution such as MikTeX. You can also include raw LaTeX and even define LaTeX macros. Check here to learn more about pdf document output. Check below to see an example of RMarkdown as pdf output. *** add file here To make your sections numbered as sections and subsections, make sure you specify number_sections: yes as part of YAML Metadata. 8.2 Text In addition, due to its literate nature, text will be an essential part in explaining your analysis. With RMarkdown, we can specify custom text formatting, such as with emphasis such as italics, bold, or even a code style. Headings are preceded with a #, breaks create a new paragraph. There are many more elements to creating a useful report using RMarkdown, and we encourage you to use the Rmarkdown Cheatsheet as a reference. 8.3 Code Chunks This is where you enter your code. You can quickly insert chunks like these into your file with the keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I) the Add Chunk command in the editor toolbar by typing the chunk delimiters {r} and. Like third code chunk above, we can also set up chunk options. Note that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot. This is a useful way to embed figures. More options can be referred from the Rmarkdown Cheatsheet. Within the text section, you can also include LaTeX format to output equation format. For example: $$f(y|N,p) = \\frac{N!}{y!(N-y)!}\\cdot p^y \\cdot (1-p)^{N-y} = {{N}\\choose{y}} \\cdot p^y \\cdot (1-p)^{N-y}$$ converts to… \\[f(y|N,p) = \\frac{N!}{y!(N-y)!}\\cdot p^y \\cdot (1-p)^{N-y} = {{N}\\choose{y}} \\cdot p^y \\cdot (1-p)^{N-y}\\] A basic introduction to LaTeX format can be found here if you want to learn more about the basics. An alternative can be to insert custom LaTeX formulas using a graphical interface such as codecogs. 8.4 Render Output After you are done, run rmarkdown::render() or click the knit HTML button at the top of the RStudio scripts pane to save the output in your working directory. Click on the links below for more information on RMarkdown: RMarkdown Example File RStudio RMarkdown tutorial R-blogger’s RMarkdown tutorial "]
]
